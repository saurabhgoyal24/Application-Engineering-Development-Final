/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Person;
import Business.WorkQueue.CreateEmergencyWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saurabh Goyal
 */
public class CreateEmergencyRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateEmergencyRequestJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;

    public CreateEmergencyRequestJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateDoctorTable();
    }

    private void populateDoctorTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblDoctor.getModel();
        dtm.setRowCount(0);

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof DoctorOrganization) {
                for (Person p : o.getPersonDirectory().getPerosonList()) {
                    Doctor d = (Doctor) p;

                    Object[] row = new Object[3];
                    row[0] = d.getFirstName() + " " + d.getLastName();
                    row[1] = d;
                    row[2] = d.getSpecialization();

                    dtm.addRow(row);

                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateEmergencyRequest = new javax.swing.JLabel();
        lblMedicalRecordNumber = new javax.swing.JLabel();
        txtMedicalRecordNumber = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDoctorToBeAssigned = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        btnCreateSituation = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();

        lblCreateEmergencyRequest.setText("Create Emergency Request");

        lblMedicalRecordNumber.setText("Medical Record Number");

        lblPatientName.setText("Patient Name");

        lblDoctorToBeAssigned.setText("Doctor to be Assigned");

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor Name", "Doctor SSN", "Specialization"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoctor);
        if (tblDoctor.getColumnModel().getColumnCount() > 0) {
            tblDoctor.getColumnModel().getColumn(0).setResizable(false);
            tblDoctor.getColumnModel().getColumn(1).setResizable(false);
            tblDoctor.getColumnModel().getColumn(2).setResizable(false);
        }

        btnCreateSituation.setText("Create Situation");
        btnCreateSituation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSituationActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblMessage.setText("Message");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(lblCreateEmergencyRequest))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMedicalRecordNumber)
                            .addComponent(lblPatientName)
                            .addComponent(lblMessage))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMedicalRecordNumber)
                            .addComponent(txtPatientName)
                            .addComponent(txtMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(btnCreateSituation))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDoctorToBeAssigned)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblCreateEmergencyRequest)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMedicalRecordNumber)
                    .addComponent(txtMedicalRecordNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMessage)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(lblDoctorToBeAssigned)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreateSituation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateSituationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSituationActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblDoctor.getSelectedRow();

            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select a doctor first.");
                return;
            }

            long medicalRecordNumber = Long.parseLong(txtMedicalRecordNumber.getText());
            String patientName = txtPatientName.getText();
            String message = txtMessage.getText();
            Doctor doctor = (Doctor) tblDoctor.getValueAt(selectedRow, 1);

            if (txtMedicalRecordNumber.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter the medical record number.");
                return;
            }

            CreateEmergencyWorkRequest cewr = new CreateEmergencyWorkRequest();
            cewr.setMedicalRecordNumber(medicalRecordNumber);
            cewr.setPatientName(patientName);
            cewr.setMessage(message);
            cewr.setSenderEnterprise(enterprise);
            doctor.getWorkQueue().getWorkRequestList().add(cewr);
            btnCreateSituation.setEnabled(false);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid data is entered.");
        }
    }//GEN-LAST:event_btnCreateSituationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateSituation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCreateEmergencyRequest;
    private javax.swing.JLabel lblDoctorToBeAssigned;
    private javax.swing.JLabel lblMedicalRecordNumber;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtMedicalRecordNumber;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables
}
