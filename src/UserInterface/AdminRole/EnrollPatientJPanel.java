/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Person.Address;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.Person.Person;
import Business.Role.PatientRole;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Saurabh Goyal
 */
public class EnrollPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnrollPatientJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise mainAuthorityEnterprise;
    private Organization doctorOrganization;
    private Organization patientOrganization;

    public EnrollPatientJPanel(JPanel userProcessContainer, Enterprise mainAuthorityEnterprise, Organization doctorOrganization, Organization patientOrganization) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.mainAuthorityEnterprise = mainAuthorityEnterprise;
        this.doctorOrganization = doctorOrganization;
        this.patientOrganization = patientOrganization;
        jDateChooser1.getDateEditor().setEnabled(false);
        enrollJDateChooser.getDateEditor().setEnabled(false);
        populateGenderComboBox();
        populateMaritalStatusComboBox();
        populatePreferredDoctorComboBox();

    }

    private void setAllFieldsEmpty() {
        txtAptNo.setText(null);
        txtCity.setText(null);
        txtCountry.setText(null);
        txtEmailId.setText(null);
        txtFirstName.setText(null);
        txtLastName.setText(null);
        txtInsuranceCompany.setText(null);
        txtPassword.setText(null);
        txtPhoneNumber.setText(null);
        txtSsn.setText(null);
        txtState.setText(null);
        txtStreetName.setText(null);
        txtInsuraneID.setText(null);
        txtUsername.setText(null);
        txtZipCode.setText(null);
        txtAllergies.setText(null);
    }

    private void populateGenderComboBox() {
        cmbGender.removeAllItems();

        cmbGender.addItem("Male");
        cmbGender.addItem("Female");

    }

    private void populateMaritalStatusComboBox() {
        cmbMarritalStatus.removeAllItems();

        cmbMarritalStatus.addItem("Single");
        cmbMarritalStatus.addItem("Married");
        cmbMarritalStatus.addItem("Seperated");

    }

    private void populatePreferredDoctorComboBox() {
        cmbPreferredDoctor.removeAllItems();
        if (doctorOrganization == null) {
            return;
        }
        for (Person p : doctorOrganization.getPersonDirectory().getPerosonList()) {
            Doctor d = (Doctor) p;
            cmbPreferredDoctor.addItem(d);
        }

    }

    private boolean checkForEmptyFields() {
        if (txtAptNo.getText().isEmpty() || txtCity.getText().isEmpty() || txtCountry.getText().isEmpty()
                || txtEmailId.getText().isEmpty() || txtFirstName.getText().isEmpty()
                || txtLastName.getText().isEmpty() || txtInsuranceCompany.getText().isEmpty()
                || (((JTextField) enrollJDateChooser.getDateEditor().getUiComponent()).getText().isEmpty())
                || txtInsuraneID.getText().isEmpty() || (((JTextField) jDateChooser1.getDateEditor().getUiComponent()).getText().isEmpty())
                || txtPassword.getText().isEmpty() || txtPhoneNumber.getText().isEmpty()
                || txtSsn.getText().isEmpty() || txtAllergies.getText().isEmpty()
                || txtState.getText().isEmpty() || txtStreetName.getText().isEmpty()
                || txtUsername.getText().isEmpty() || txtZipCode.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEnrollPatient = new javax.swing.JLabel();
        txtAptNo = new javax.swing.JTextField();
        lblStreetName = new javax.swing.JLabel();
        lblSsn = new javax.swing.JLabel();
        txtStreetName = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblEmailId = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox();
        btnAddPatient = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txtZipCode = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblApt = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblInsuranceCompany = new javax.swing.JLabel();
        lblInsuranceId = new javax.swing.JLabel();
        txtInsuranceCompany = new javax.swing.JTextField();
        txtInsuraneID = new javax.swing.JTextField();
        lblAllergies = new javax.swing.JLabel();
        txtAllergies = new javax.swing.JTextField();
        lblMaritalStatus = new javax.swing.JLabel();
        cmbMarritalStatus = new javax.swing.JComboBox();
        lblPreferredDoctor = new javax.swing.JLabel();
        cmbPreferredDoctor = new javax.swing.JComboBox();
        lblEnrollmentDate = new javax.swing.JLabel();
        enrollJDateChooser = new com.toedter.calendar.JDateChooser();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();

        lblEnrollPatient.setText("Enroll Patient");

        lblStreetName.setText("Street Name");

        lblSsn.setText("SSN");

        lblState.setText("State");

        lblCity.setText("City");

        lblEmailId.setText("Email ID");

        lblCountry.setText("Country");

        lblPhoneNumber.setText("Phone Number");

        lblGender.setText("Gender");

        lblZipCode.setText("Zip Code");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAddPatient.setText("Add Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblAddress.setText("Address");

        lblFirstName.setText("First Name");

        lblApt.setText("Apt No.");

        lblLastName.setText("Last Name");

        lblAge.setText("Date Of Birth");

        lblInsuranceCompany.setText("Insurance Company");

        lblInsuranceId.setText("Insurance ID");

        lblAllergies.setText("Allergies");

        lblMaritalStatus.setText("Marital Status");

        cmbMarritalStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPreferredDoctor.setText("Preferred Doctor");

        cmbPreferredDoctor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPreferredDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPreferredDoctorActionPerformed(evt);
            }
        });

        lblEnrollmentDate.setText("Enrollment Date");

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        lblDoctorName.setText("Doctor Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInsuranceCompany)
                            .addComponent(lblAllergies))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtInsuranceCompany)
                            .addComponent(txtAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFirstName)
                            .addComponent(lblAge)
                            .addComponent(lblEmailId)
                            .addComponent(lblPhoneNumber))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEmailId))
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(179, 179, 179)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSsn)
                                    .addComponent(lblGender))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLastName)
                                    .addComponent(cmbGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSsn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMaritalStatus)
                                .addGap(18, 18, 18)
                                .addComponent(cmbMarritalStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(lblEnrollPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEnrollmentDate)
                .addGap(18, 18, 18)
                .addComponent(enrollJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPreferredDoctor)
                                        .addComponent(lblInsuranceId)
                                        .addComponent(lblDoctorName))
                                    .addGap(55, 55, 55)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtInsuraneID)
                                        .addComponent(cmbPreferredDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblName)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblApt)
                                        .addComponent(lblState))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAptNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblStreetName)
                                        .addComponent(lblCountry))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtStreetName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(84, 84, 84)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblZipCode)
                                        .addComponent(lblCity))
                                    .addGap(29, 29, 29)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtZipCode)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(218, 218, 218)
                                .addComponent(btnAddPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(156, 156, 156))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblEnrollPatient))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblEnrollmentDate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(enrollJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFirstName)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(lblAge)))
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSsn)
                            .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmailId)
                            .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNumber)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaritalStatus)
                    .addComponent(cmbMarritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(lblAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApt)
                            .addComponent(txtAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblStreetName)
                            .addComponent(txtStreetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblState)
                                .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCountry)
                                .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblZipCode)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInsuranceCompany)
                            .addComponent(txtInsuranceCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInsuraneID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAllergies)
                            .addComponent(txtAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPreferredDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPreferredDoctor)))
                    .addComponent(lblInsuranceId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDoctorName)
                    .addComponent(lblName))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAddPatient)
                        .addGap(28, 28, 28))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
        if (!checkForEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Incomplete data is entered.");
            return;
        }
        try {
            String firstName = txtFirstName.getText();
            String lastName = txtLastName.getText();
            //            Date dateOfBirth1 = jDateChooser1.getDate();
            String gender = (String) cmbGender.getSelectedItem();
            int ssn = Integer.parseInt(txtSsn.getText());
            String emailId = txtEmailId.getText();
            long phoneNumber = Long.parseLong(txtPhoneNumber.getText());
            String maritalStatus = (String) cmbMarritalStatus.getSelectedItem();

            String DateFormat = "EEE, MMM d, yyyy";

            SimpleDateFormat sdf = new SimpleDateFormat(DateFormat);
            Date d = jDateChooser1.getDate();
            String dateOfBirth = sdf.format(d);

            SimpleDateFormat sdf1 = new SimpleDateFormat(DateFormat);
            Date d1 = enrollJDateChooser.getDate();
            String dateOfEnrollment = sdf1.format(d1);

            if (d.after(d1)) {
                JOptionPane.showMessageDialog(null, "Date od birth cannot be after date of enrollment.");
                return;
            }
            String aptNo = txtAptNo.getText();
            String streetName = txtStreetName.getText();
            String city = txtCity.getText();
            String state = txtState.getText();
            String country = txtCountry.getText();
            int zipCode = Integer.parseInt(txtZipCode.getText());

            String insuranceCompany = txtInsuranceCompany.getText();
            String insuranceId = txtInsuraneID.getText();
            String allergies = txtAllergies.getText();
            Doctor preferredDoctor = (Doctor) cmbPreferredDoctor.getSelectedItem();

            String userName = txtUsername.getText();
            String password = txtPassword.getText();

            Pattern pattern = Pattern.compile("[a-zA-Z ]+");
            Matcher fiName = pattern.matcher(firstName);
            
            if(preferredDoctor == null){
                JOptionPane.showMessageDialog(null, "No doctor is present in the enterprise.");
                return;
            }

            if (!fiName.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid first name.");
                return;
            }

            Matcher laName = pattern.matcher(lastName);

            if (!laName.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid last name.");
                return;
            }

            Matcher ciName = pattern.matcher(city);

            if (!ciName.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid city name.");
                return;
            }

            Matcher stName = pattern.matcher(state);

            if (!stName.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid state name.");
                return;
            }

            Matcher coName = pattern.matcher(country);

            if (!coName.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid country name.");
                return;
            }

//            if(!EcoSystem.checkIfSsnIsUnique(ssn)){
//                return;
//            }
            boolean check = EcoSystem.cheackIfUsernameIsUnique(userName);

            if (check == true) {
                Patient patient = new Patient();

                patient.setFirstName(firstName);
                patient.setLastName(lastName);
                patient.setDateOfBirth(dateOfBirth);
                patient.setGender(gender);
                patient.setSsn(ssn);
                patient.setEmailId(emailId);
                patient.setPhoneNumber(phoneNumber);
                patient.setMaritalStatus(maritalStatus);
                patient.setDateOfEnrollment(dateOfEnrollment);

                Address address = new Address();
                address.setAptNumber(aptNo);
                address.setCity(city);
                address.setCountry(country);
                address.setState(state);
                address.setStreetName(streetName);
                address.setZipCode(zipCode);

                patient.setAddress(address);

                patient.setInsuranceCompany(insuranceCompany);
                patient.setInsuranceID(insuranceId);
                patient.setAllergies(allergies);
                patient.setPreferredDoctor(preferredDoctor);

                for (Organization o : mainAuthorityEnterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof PatientOrganization) {
                        if (!EcoSystem.checkIfSsnIsUnique(ssn, o)) {
                            return;
                        }
                        o.getPersonDirectory().createAndAddPerson(patient);
                        o.getUserAccountDirectory().createUserAccount(userName, password, patient, new PatientRole());

                    }
                }
//                mainAuthorityEnterprise.getPersonDirectory().createAndAddPerson(patient);
//                mainAuthorityEnterprise.getUserAccountDirectory().createUserAccount(userName, password, patient, new PatientRole());
                patientOrganization.getPersonDirectory().createAndAddPerson(patient);
                setAllFieldsEmpty();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid credentials are entered.");
        }
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbPreferredDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPreferredDoctorActionPerformed
        // TODO add your handling code here:
        Doctor d = (Doctor) cmbPreferredDoctor.getSelectedItem();
        if (d != null) {
            lblName.setText(d.getFirstName() + " " + d.getLastName());
        }
    }//GEN-LAST:event_cmbPreferredDoctorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbGender;
    private javax.swing.JComboBox cmbMarritalStatus;
    private javax.swing.JComboBox cmbPreferredDoctor;
    private com.toedter.calendar.JDateChooser enrollJDateChooser;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAllergies;
    private javax.swing.JLabel lblApt;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblEnrollPatient;
    private javax.swing.JLabel lblEnrollmentDate;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblInsuranceCompany;
    private javax.swing.JLabel lblInsuranceId;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMaritalStatus;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPreferredDoctor;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreetName;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtAptNo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtInsuranceCompany;
    private javax.swing.JTextField txtInsuraneID;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreetName;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
