/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole.PharmaceuticalCompany;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Person.Person;
import Business.WorkQueue.IssueNetworkNotificationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saurabh Goyal
 */
public class IssueNetworkNotificationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form IssueNetworkNotificationJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem system;

    public IssueNetworkNotificationJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        populateRequestTable();
    }

    private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblWorkRequests.getModel();
        dtm.setRowCount(0);

        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof IssueNetworkNotificationWorkRequest) {
                IssueNetworkNotificationWorkRequest innwr = (IssueNetworkNotificationWorkRequest) wr;

                Object[] row = new Object[3];

                row[0] = innwr.getRequestDate();
                row[1] = innwr;
                String s = "";

                for (String sent : innwr.getSentTo()) {
                    s = s + " " + sent;
                }
                row[2] = s;
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIssueNetworkNotification = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequests = new javax.swing.JTable();
        btnIssueEnquiry = new javax.swing.JButton();
        btnPharmacies = new javax.swing.JCheckBox();
        btnDoctor = new javax.swing.JCheckBox();
        btnPatients = new javax.swing.JCheckBox();
        lblSendMessageTo = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        lblIssueNetworkNotification.setText("Issue Network Notification");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblMessage.setText("Message");

        tblWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Message", "Sent To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequests);
        if (tblWorkRequests.getColumnModel().getColumnCount() > 0) {
            tblWorkRequests.getColumnModel().getColumn(0).setResizable(false);
            tblWorkRequests.getColumnModel().getColumn(1).setResizable(false);
            tblWorkRequests.getColumnModel().getColumn(2).setResizable(false);
        }

        btnIssueEnquiry.setText("Issue Enquiry");
        btnIssueEnquiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueEnquiryActionPerformed(evt);
            }
        });

        btnPharmacies.setText("Pharmacies");

        btnDoctor.setText("Doctor");

        btnPatients.setText("Patients");

        lblSendMessageTo.setText("Send Message to");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRefresh)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(btnBack)
                            .addGap(45, 45, 45)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMessage)
                                .addComponent(lblSendMessageTo))
                            .addGap(91, 91, 91)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnPatients)
                                .addComponent(btnDoctor)
                                .addComponent(btnPharmacies)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnIssueEnquiry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(157, 157, 157))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(79, 79, 79)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblIssueNetworkNotification)
                                    .addGap(288, 288, 288))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblIssueNetworkNotification)
                .addGap(29, 29, 29)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnPharmacies)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoctor)
                    .addComponent(lblSendMessageTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPatients)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMessage)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(btnIssueEnquiry)
                        .addGap(49, 49, 49)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnIssueEnquiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueEnquiryActionPerformed
        // TODO add your handling code here:
        String message = txtMessage.getText();
        if (message.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a message that you want to broadcast.");
            return;
        }

        if (!(btnDoctor.isSelected() || btnPatients.isSelected() || btnPharmacies.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please select the entities to whom you want to broadcast.");
            return;
        }

        IssueNetworkNotificationWorkRequest innwr = new IssueNetworkNotificationWorkRequest();
        innwr.setMessage(message);
        innwr.setEnterprise(enterprise);

        if (btnDoctor.isSelected() || btnPatients.isSelected()) {

            for (Organization o : system.getMainAuthorityEnterprise().getOrganizationDirectory().getOrganizationList()) {
                if (btnDoctor.isSelected()) {
                    if (o instanceof DoctorOrganization) {
                        for (Person p : o.getPersonDirectory().getPerosonList()) {
                            p.getWorkQueue().getWorkRequestList().add(innwr);

                        }
                        innwr.getSentTo().add("Doctors");
                    }
                }
                if (btnPatients.isSelected()) {
                    if (o instanceof PatientOrganization) {
                        for (Person p : o.getPersonDirectory().getPerosonList()) {
                            p.getWorkQueue().getWorkRequestList().add(innwr);

                        }
                        innwr.getSentTo().add("Patients");
                    }
                }
            }
        }

        if (btnPharmacies.isSelected()) {
            for (CountryNetwork cn : system.getCountryNetworkList()) {
                for (StateNetwork sn : cn.getStateNetwork()) {
                    for (CityNetwork cin : sn.getCityNetwork()) {
                        for (Enterprise e : cin.getEnterpriseDirectory().getEnterpriseList()) {
                            if (e instanceof PharmacyEnterprise) {
                                e.getWorkQueue().getWorkRequestList().add(innwr);

                            }
                        }
                    }
                }
            }
            innwr.getSentTo().add("Pharmacies");
        }
        enterprise.getWorkQueue().getWorkRequestList().add(innwr);

        JOptionPane.showMessageDialog(null, "Enquiries has been sent.");
        txtMessage.setText(null);
        populateRequestTable();


    }//GEN-LAST:event_btnIssueEnquiryActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JCheckBox btnDoctor;
    private javax.swing.JButton btnIssueEnquiry;
    private javax.swing.JCheckBox btnPatients;
    private javax.swing.JCheckBox btnPharmacies;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIssueNetworkNotification;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblSendMessageTo;
    private javax.swing.JTable tblWorkRequests;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
