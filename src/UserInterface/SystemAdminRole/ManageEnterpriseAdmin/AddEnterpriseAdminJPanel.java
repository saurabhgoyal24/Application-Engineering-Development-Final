/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole.ManageEnterpriseAdmin;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MainAuthorityEnterprise;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.AdminRole;
import Business.Role.MainAuthorityAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Saurabh Goyal
 */
public class AddEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddEnterpriseAdminJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public AddEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        cmbCountry.removeAllItems();
        cmbState.removeAllItems();
        cmbCity.removeAllItems();
        populateEnterpriseComboBox();
        populateCountryComboBox();

    }

    private void populateEnterpriseComboBox() {
        cmbEnterprise.removeAllItems();

        if (system.getMainAuthorityEnterprise() != null) {
            cmbEnterprise.addItem(system.getMainAuthorityEnterprise());
        }
    }

    private void populateCountryComboBox() {
        cmbCountry.removeAllItems();

        for (CountryNetwork cn : system.getCountryNetworkList()) {
            cmbCountry.addItem(cn);
        }

    }

    private void populateStateComboBox(CountryNetwork cn) {
        cmbState.removeAllItems();

        for (StateNetwork sn : cn.getStateNetwork()) {
            cmbState.addItem(sn);
        }
    }

    private void populateCityComboBox(StateNetwork sn) {

        cmbCity.removeAllItems();

        for (CityNetwork cin : sn.getCityNetwork()) {
            cmbCity.addItem(cin);
        }
    }

    private void populateEnterpriseComboBox(CityNetwork cin) {
        cmbEnterprise.removeAllItems();

        for (Enterprise enterprise : cin.getEnterpriseDirectory().getEnterpriseList()) {
            cmbEnterprise.addItem(enterprise);
        }
        if (system.getMainAuthorityEnterprise() != null) {
            cmbEnterprise.addItem(system.getMainAuthorityEnterprise());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddEnterpriseAdmin = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblNetwork = new javax.swing.JLabel();
        cmbCountry = new javax.swing.JComboBox();
        cmbState = new javax.swing.JComboBox();
        cmbCity = new javax.swing.JComboBox();
        lblCountry = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        cmbEnterprise = new javax.swing.JComboBox();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();

        lblAddEnterpriseAdmin.setText("Add Enterprise Admin");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblNetwork.setText("Network");

        cmbCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCountryActionPerformed(evt);
            }
        });

        cmbState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStateActionPerformed(evt);
            }
        });

        cmbCity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCityActionPerformed(evt);
            }
        });

        lblCountry.setText("Country");

        lblState.setText("State");

        lblCity.setText("City");

        lblEnterprise.setText("Enterprise");

        cmbEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnterpriseActionPerformed(evt);
            }
        });

        lblName.setText("First Name");

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(lblAddEnterpriseAdmin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNetwork)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCountry)
                                    .addComponent(lblEnterprise))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblState))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCity)
                                    .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName)
                                    .addComponent(lblUsername)
                                    .addComponent(lblPassword))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtUsername)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(btnSubmit)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblAddEnterpriseAdmin)
                .addGap(42, 42, 42)
                .addComponent(lblNetwork)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountry)
                    .addComponent(lblState)
                    .addComponent(lblCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(lblEnterprise)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(13, 13, 13)
                .addComponent(btnBack)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCountryActionPerformed
        // TODO add your handling code here:
        CountryNetwork cn = (CountryNetwork) cmbCountry.getSelectedItem();
        if (cn == null) {
            cmbState.removeAllItems();
        }
        if (cn != null) {
            populateStateComboBox(cn);
        }
    }//GEN-LAST:event_cmbCountryActionPerformed

    private void cmbStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStateActionPerformed
        // TODO add your handling code here:
        StateNetwork sn = (StateNetwork) cmbState.getSelectedItem();
        if (sn == null) {
            cmbCity.removeAllItems();
        }
        if (sn != null) {

            populateCityComboBox(sn);

        }
    }//GEN-LAST:event_cmbStateActionPerformed

    private void cmbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCityActionPerformed
        // TODO add your handling code here:
        CityNetwork cin = (CityNetwork) cmbCity.getSelectedItem();
        if (cin == null) {
            populateEnterpriseComboBox();
        }
        if (cin != null) {

            populateEnterpriseComboBox(cin);
        }
    }//GEN-LAST:event_cmbCityActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String firstname = txtName.getText();
        String username = txtUsername.getText();
        String password = txtPassword.getText();

        Pattern pattern = Pattern.compile("[a-zA-Z ]+");
        Matcher fiName = pattern.matcher(firstname);
        
        if(!fiName.matches()){
            JOptionPane.showMessageDialog(null, "Invalid first name.");
            return;
        }
        if (firstname.isEmpty() || username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data entered is incomplete.");
            return;
        }
        boolean check = EcoSystem.cheackIfUsernameIsUnique(username);

        if (check == true) {
            Enterprise enterprise = (Enterprise) cmbEnterprise.getSelectedItem();

            if (enterprise == null) {
                JOptionPane.showMessageDialog(null, "No enterprise is present in this city.");
                return;
            }
            for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {

                if (enterprise instanceof MainAuthorityEnterprise) {
                    if (ua.getRole() instanceof MainAuthorityAdminRole) {
                        JOptionPane.showMessageDialog(null, "Admin for this enterprise is alread added.");
                        return;
                    }
                }

                if (ua.getRole() instanceof AdminRole) {
                    JOptionPane.showMessageDialog(null, "Admin for this enterprise is already created.");
                    return;
                }
            }
            Person p = new Person();
            p.setFirstName(firstname);
            enterprise.getPersonDirectory().createAndAddPerson(p);

            if (enterprise instanceof MainAuthorityEnterprise) {
                enterprise.getUserAccountDirectory().createUserAccount(username, password, p, new MainAuthorityAdminRole());
                txtName.setText(null);
                txtPassword.setText(null);
                txtUsername.setText(null);
                return;
            }
            enterprise.getUserAccountDirectory().createUserAccount(username, password, p, new AdminRole());
            txtName.setText(null);
            txtPassword.setText(null);
            txtUsername.setText(null);

        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cmbEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnterpriseActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbEnterpriseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cmbCity;
    private javax.swing.JComboBox cmbCountry;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JComboBox cmbState;
    private javax.swing.JLabel lblAddEnterpriseAdmin;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
