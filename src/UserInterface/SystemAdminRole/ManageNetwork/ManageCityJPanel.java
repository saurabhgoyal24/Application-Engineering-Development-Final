/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole.ManageNetwork;

import Business.EcoSystem;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saurabh Goyal
 */
public class ManageCityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCity
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private CountryNetwork cn;

    public ManageCityJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateCountryComboBox();
    }

    private void populateCountryComboBox() {
        cmbCountry.removeAllItems();
        cmbCountry1.removeAllItems();

        for (CountryNetwork cn : system.getCountryNetworkList()) {
            cmbCountry.addItem(cn);
            cmbCountry1.addItem(cn);
        }
    }

    private void populateCityTable(CountryNetwork cn) {
        DefaultTableModel dtm = (DefaultTableModel) tblCity.getModel();
        dtm.setRowCount(0);

        for (StateNetwork sn : cn.getStateNetwork()) {
            for (CityNetwork cin : sn.getCityNetwork()){
                
                Object[] row = new Object[2];

                row[0] = sn;
                row[1] = cin;

                dtm.addRow(row);
            }
        }

    }
    
    private void populateStateComboBox(CountryNetwork cn){
        
        cmbState.removeAllItems();
        
        for(StateNetwork sn : cn.getStateNetwork()){
            cmbState.addItem(sn);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageCity = new javax.swing.JLabel();
        cmbCountry = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCity = new javax.swing.JTable();
        lblCountry1 = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        cmbCountry1 = new javax.swing.JComboBox();
        cmbState = new javax.swing.JComboBox();
        lblCity = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        btnAddCity = new javax.swing.JButton();
        lblCountry = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnRemoveCity = new javax.swing.JButton();

        lblManageCity.setText("Manage City");

        cmbCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCountryActionPerformed(evt);
            }
        });

        tblCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "State", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCity);
        if (tblCity.getColumnModel().getColumnCount() > 0) {
            tblCity.getColumnModel().getColumn(0).setResizable(false);
            tblCity.getColumnModel().getColumn(1).setResizable(false);
        }

        lblCountry1.setText("Country");

        lblState.setText("State");

        cmbCountry1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCountry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCountry1ActionPerformed(evt);
            }
        });

        cmbState.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCity.setText("City");

        btnAddCity.setText("Add City");
        btnAddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityActionPerformed(evt);
            }
        });

        lblCountry.setText("Country");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRemoveCity.setText("Remove City");
        btnRemoveCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(lblManageCity))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(148, 148, 148)
                        .addComponent(btnAddCity))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCountry1)
                            .addComponent(lblState)
                            .addComponent(lblCity))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbCountry1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbState, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRemoveCity)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblCountry)
                                    .addGap(28, 28, 28)
                                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblManageCity)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountry))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnRemoveCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountry1)
                    .addComponent(cmbCountry1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(cmbState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btnAddCity)
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCountryActionPerformed
        // TODO add your handling code here:
        cn = (CountryNetwork)cmbCountry.getSelectedItem();
        
        if(cn!=null){
            populateCityTable(cn);
        }
        
    }//GEN-LAST:event_cmbCountryActionPerformed

    private void cmbCountry1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCountry1ActionPerformed
        // TODO add your handling code here:
        CountryNetwork cn = (CountryNetwork)cmbCountry1.getSelectedItem();
        
        if(cn!=null){
            populateStateComboBox(cn);
        }
    }//GEN-LAST:event_cmbCountry1ActionPerformed

    private void btnAddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityActionPerformed
        // TODO add your handling code here:
        String cityName = txtCityName.getText();

        Pattern pattern = Pattern.compile("[a-zA-Z ]+");
        Matcher ciName = pattern.matcher(cityName);
        
        if(!ciName.matches()){
            JOptionPane.showMessageDialog(null, "Invalid city name.");
            return;
        }
        StateNetwork sn = (StateNetwork)cmbState.getSelectedItem();
        if(sn==null){
            JOptionPane.showMessageDialog(null, "Select a state first.");
            return;
        }
        if(cityName.isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter a valid city name.");
            return;
        }
        for(CityNetwork cin : sn.getCityNetwork()){
            if(cin.getCityName().equals(cityName)){
                JOptionPane.showMessageDialog(null, "This city name already exists.");
                return;
            }
        }
        CityNetwork cn = new CityNetwork();
        cn.setCityName(cityName);
        
        sn.addCity(cn);
    }//GEN-LAST:event_btnAddCityActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCity.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a City first.");
            return;
        }

        StateNetwork sn = (StateNetwork) tblCity.getValueAt(selectedRow, 0);
        CityNetwork cin = (CityNetwork) tblCity.getValueAt(selectedRow,1);
        int c = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this city.", "Warning", JOptionPane.YES_NO_OPTION);
        if (c == JOptionPane.YES_OPTION) {
            sn.getCityNetwork().remove(cin);
            populateCityTable(cn);
        }
    }//GEN-LAST:event_btnRemoveCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCity;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemoveCity;
    private javax.swing.JComboBox cmbCountry;
    private javax.swing.JComboBox cmbCountry1;
    private javax.swing.JComboBox cmbState;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblCountry1;
    private javax.swing.JLabel lblManageCity;
    private javax.swing.JLabel lblState;
    private javax.swing.JTable tblCity;
    private javax.swing.JTextField txtCityName;
    // End of variables declaration//GEN-END:variables
}
